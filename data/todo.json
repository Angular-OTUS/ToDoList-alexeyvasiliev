{
  "todo": [
    {
      "id": 1,
      "description": "☑️ оздание нового Angular проекта   ☑️ создание нового компонента   ☑️ добавление разметки в шаблон компонента',",
      "text": "Заготовка Angular проекта для приложения ToDo List",
      "status": "Completed"
    },
    {
      "id": 2,
      "description": "☑️ создание нового компонента   ☑️ связывание данных и событий с шаблоном компонента   ☑️ включение одних компонентов в другие и передача данных между ними",
      "text": "Работа с компонентами: привязка логики к шаблону и выделение частей в отдельные компоненты",
      "status": "Completed"
    },
    {
      "id": 3,
      "description": "   ☑️ использование методом жизненного цикла компонента.   ☑️ создавать модули   ☑️ декларировать и экспортировать компоненты в модуле   ☑️ импортировать один модуль в другой",
      "text": "Добавляем анимацию загрузки (имитируем подгрузку данных с бекэнда). Используем shared модуль",
      "status": "Completed"
    },
    {
      "id": 4,
      "description": "️️ ☑️ использование стандартных атрибутивных и структурных директив ☑️ создание пользовательских директив",
      "text": "Список задач с описаниями, предпросмотр описания элемента списка. Всплывающие подсказки",
      "status": "Completed"
    },
    {
      "id": 5,
      "description": "☑️ Создавать сервисы для хранения бизнес данных и сервисы для реализации коммуникации между приложениями.☑️  Внедрять сервисы в компоненты.",
      "text": "Добавляем сервисы и редактирования элемента списка",
      "status": "Completed"
    },
    {
      "status": "Completed",
      "description": "☑️ Начать применять Angular формы. ☑️ Работать с бизнес данными через HTTP API и сервисы.",
      "text": "Добавляем форму  редактирования элемента списка, HTTP client",
      "id": 6
    },
    {
      "text": "Добавляем роутинг",
      "description": "☑️ Научиться добавлять роутинг и ☑️ настраивать его в приложение с нуля.",
      "status": "Completed",
      "id": 7
    },
    {
      "text": "Переписываем различные фичи на реализации с использованием RxJS",
      "description": "☑️ Создать сервис для выполнения запросов к бекенду для получения списка задач, изменения и удаления если ещё не создан. Сервис должен возвращать Observables на каждый запрос как мы рассматривали на уроке. ☑️ Сделать рефактор сервиса который хранит список задач с использованием приватного BehaviorSubject и публичных геттеров и сеттеров как обсуждали на занятии. Адаптировать все участки кода в проекте использования этого сервиса. ☑️ Сделать рефактор сервиса который хранит и отображает Toasts c использованием той же практики с BehaviorSubject. (перевести весь сервис на реактивный стиль) ☑️(Опционально так как ещё не прошли операторы) Сделать реализацию фильтра тасок через Observables",
      "status": "Completed",
      "id": 8
    },
    {
      "text": "Следующее ДЗ",
      "description": "sdfsdf",
      "status": "InProgress",
      "id": 9
    }
  ]
}
